{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,SAASC,iBAAiB,oBAAoB,KAwB5C,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFM,YAAW,KACTF,EAAQ,C,SAAEN,E,MAAUC,GAAQ,GAC3BA,GAEHM,EAAO,C,SAAEP,E,MAAUC,GAAQ,G,CAhCpBJ,SAASY,cAAc,SAE/BX,iBAAiB,UAAUY,eAAgBC,GAC9CA,EAAMC,iBAEN,MAAMC,EAAaC,SAASC,KAAKC,SAASf,MAAMgB,MAAO,IACjDC,EAAOJ,SAASC,KAAKC,SAASE,KAAKD,MAAO,IAC1CE,EAASL,SAASC,KAAKC,SAASG,OAAOF,MAAO,IAEpD,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAC3B,IACE,MAAMC,QAAetB,EAAcqB,EAAGP,GAAcO,EAAI,GAAKF,GAC7DI,EAAA3B,GAAS4B,OAAOC,QACd,qBAAqBH,EAAOrB,eAAeqB,EAAOpB,U,CAEpD,MAAOwB,GACPH,EAAA3B,GAAS4B,OAAOG,QACd,oBAAoBD,EAAMzB,eAAeyB,EAAMxB,U","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const form = document.querySelector('.form');\n\n  form.addEventListener('submit', async function (event) {\n    event.preventDefault();\n\n    const firstDelay = parseInt(this.elements.delay.value, 10);\n    const step = parseInt(this.elements.step.value, 10);\n    const amount = parseInt(this.elements.amount.value, 10);\n\n    for (let i = 1; i <= amount; i++) {\n      try {\n        const result = await createPromise(i, firstDelay + (i - 1) * step);\n        Notiflix.Notify.success(\n          `Fulfilled promise ${result.position} in ${result.delay}ms`\n        );\n      } catch (error) {\n        Notiflix.Notify.failure(\n          `Rejected promise ${error.position} in ${error.delay}ms`\n        );\n      }\n    }\n  });\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        setTimeout(() => {\n          resolve({ position, delay });\n        }, delay);\n      } else {\n        reject({ position, delay });\n      }\n    });\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","document","addEventListener","createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","querySelector","async","event","preventDefault","firstDelay","parseInt","this","elements","value","step","amount","i","result","$parcel$interopDefault","Notify","success","error","failure"],"version":3,"file":"03-promises.1cf0f042.js.map"}